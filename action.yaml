name: 'Go Coverage Action'
description: 'Adds HTML coverage for Go application to your PRs'
inputs:
  repository:
    description: 'Repository name with owner. For example, actions/checkout'
    default: ${{ github.repository }}
  branch:
    default: cover
    description: The branch to checkout and push coverage to.
  token:
    description: The token to use for pushing to the repository.
    default: ${{ github.token }}
outputs:
  random-number:
    description: "Random number"
    value: ${{ steps.random-number-generator.outputs.random-number }}
runs:
  using: "composite"
  steps:
    - name: Checkout Coverage Branch
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.repository }}
        path: go-cover
        token: ${{ inputs.token }}

    - name: Checkout Coverage Branch
      shell: bash
      run: |
        cd go-cover
        git fetch origin
        if git rev-parse --verify origin/${{ inputs.branch }}; then
          git checkout ${{ inputs.branch }}
          git pull origin ${{ inputs.branch }}
        else
          git checkout --orphan ${{ inputs.branch }}
          rm .git/index
          git clean -fdx
          touch index.html
          cp ../nord.css .
          git add index.html nord.css
          git config user.email "go-coverage-action@github.com"
          git config user.name "go-coverage-action"
          git commit -m "chore: initial commit"
          git push origin ${{ inputs.branch }}
        fi

    - name: Push Coverage
      shell: bash
      run: |
        export REVISION="${{ github.event.pull_request.head.sha || github.sha }}"
        cd go-cover
        mv ../cover.html ${REVISION}.html
        ex -sc '%s/<style>/<style>@import url("nord.css");/' -c 'x' ${REVISION}.html
        git add -f ${REVISION}.html
        git config user.email "go-coverage-action@github.com"
        git config user.name "go-coverage-action"
        git commit -m "chore: add cover for ${REVISION}" || true
        git push origin ${{ inputs.branch }}

    - name: Post Code Coverage Comment
      if: ${{ github.event_name == 'pull_request' }}
      uses: actions/github-script@v6
      with:
        github-token: ${{ inputs.token }}
        script: |
          const script = require('${{ github.workspace }}/update-code-coverage-comment.js')
          const revision = '${{ github.event.pull_request.head.sha || github.sha }}'
          await script({ context, github }, revision)
