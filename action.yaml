name: 'Go Beautiful HTML Coverage'
description: 'A GitHub Action to track code coverage in your pull requests, with a beautiful HTML preview, for free.'
author: 'Kilian Ciuffolo'
branding:
  icon: 'bar-chart'
  color: 'green'
inputs:
  repository:
    description: 'Repository name with owner. For example, actions/checkout'
    default: ${{ github.repository }}
  branch:
    default: cover
    description: The branch to checkout or create and push coverage to.
  token:
    description: The token to use for pushing to the repository.
    default: ${{ github.token }}
runs:
  using: composite
  steps:
    - name: Checkout Coverage Branch
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.repository }}
        path: go-cover
        token: ${{ inputs.token }}

    - name: Checkout Coverage Branch
      shell: bash
      run: |
        cd go-cover
        git fetch origin
        if git rev-parse --verify origin/${{ inputs.branch }}; then
          git checkout ${{ inputs.branch }}
          git pull origin ${{ inputs.branch }}
        else
          git checkout --orphan ${{ inputs.branch }}
          rm .git/index
          git clean -fdx
        fi

    - name: Push Coverage
      shell: bash
      run: |
        export REVISION="${{ github.event.pull_request.head.sha || github.sha }}"
        go tool cover -func=cover.out -o cover.txt
        go tool cover -html=cover.out -o cover.html
        cd go-cover
        mv ../cover.html ${REVISION}.html
        ex -sc '%s/<style>/<style>@import url("nord.css");/' -c 'x' ${REVISION}.html
        ex -sc '%s/<\/script>/<\/script><script src="ln.js"><\/script>/' -c 'x' ${REVISION}.html
        cp ${GITHUB_ACTION_PATH}/assets/* .
        git add .
        git config user.email "go-coverage-action@github.com"
        git config user.name "go-coverage-action"
        git commit -m "chore: add cover for ${REVISION}" || true
        git push origin ${{ inputs.branch }}

    - name: Post Code Coverage Comment
      if: ${{ github.event_name == 'pull_request' }}
      uses: actions/github-script@v6
      with:
        github-token: ${{ inputs.token }}
        script: |
          const script = require(`${process.env.GITHUB_ACTION_PATH}/src/update-comment.js`)
          const revision = '${{ github.event.pull_request.head.sha || github.sha }}'
          await script({ context, github }, revision)
